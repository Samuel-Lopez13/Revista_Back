// <auto-generated />
using System;
using Core.Infraestructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Core.Infraestructure.Persistance.Migrations
{
    [DbContext(typeof(RevistaContext))]
    [Migration("20240227065549_MigracionInicial")]
    partial class MigracionInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Core.Domain.Entities.Aprobacion", b =>
                {
                    b.Property<int>("Aprobacion_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Aprobado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Articulo_Id")
                        .HasColumnType("int");

                    b.HasKey("Aprobacion_Id");

                    b.HasIndex("Articulo_Id");

                    b.ToTable("Aprobaciones");
                });

            modelBuilder.Entity("Core.Domain.Entities.Articulo", b =>
                {
                    b.Property<int>("Articulo_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Archivo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Estatus_Id")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Fecha")
                        .HasColumnType("time(6)");

                    b.Property<int?>("Intereses_Id")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Usuario_Id")
                        .HasColumnType("int");

                    b.HasKey("Articulo_Id");

                    b.HasIndex("Estatus_Id");

                    b.HasIndex("Intereses_Id");

                    b.HasIndex("Usuario_Id");

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("Core.Domain.Entities.ArticuloAprobado", b =>
                {
                    b.Property<int>("ArticuloAprobado_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Articulo_Id")
                        .HasColumnType("int");

                    b.Property<string>("Constancia")
                        .HasColumnType("longtext");

                    b.HasKey("ArticuloAprobado_Id");

                    b.HasIndex("Articulo_Id");

                    b.ToTable("ArticulosAprobados");
                });

            modelBuilder.Entity("Core.Domain.Entities.AsignacionRevision", b =>
                {
                    b.Property<int>("AsignacionRevision_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Articulo_Id")
                        .HasColumnType("int");

                    b.Property<int>("Revisor_Id")
                        .HasColumnType("int");

                    b.HasKey("AsignacionRevision_Id");

                    b.HasIndex("Articulo_Id");

                    b.HasIndex("Revisor_Id");

                    b.ToTable("AsignacionesRevision");
                });

            modelBuilder.Entity("Core.Domain.Entities.CriterioEvaluacion", b =>
                {
                    b.Property<int>("CriterioEvaluacion_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Calidad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Calificacion")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Innovacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Novedad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Originalidad")
                        .HasColumnType("int");

                    b.Property<string>("Pertinencia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Presentacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Relevancia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Transcendencia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CriterioEvaluacion_Id");

                    b.ToTable("CriteriosEvaluacion");
                });

            modelBuilder.Entity("Core.Domain.Entities.Estatus", b =>
                {
                    b.Property<int>("Estatus_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Estatus_Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Core.Domain.Entities.Intereses", b =>
                {
                    b.Property<int>("Intereses_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Intereses_Id");

                    b.ToTable("Intereses");
                });

            modelBuilder.Entity("Core.Domain.Entities.Revision", b =>
                {
                    b.Property<int>("Revision_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AsignacionRevision_Id")
                        .HasColumnType("int");

                    b.Property<string>("ConstanciaRevision")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CriteriosEvaluacion_Id")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("FechaRevision")
                        .HasColumnType("time(6)");

                    b.Property<int?>("Valoracion_Id")
                        .HasColumnType("int");

                    b.HasKey("Revision_Id");

                    b.HasIndex("AsignacionRevision_Id");

                    b.HasIndex("CriteriosEvaluacion_Id");

                    b.HasIndex("Valoracion_Id");

                    b.ToTable("Revisiones");
                });

            modelBuilder.Entity("Core.Domain.Entities.Revisor", b =>
                {
                    b.Property<int>("Revisor_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Curriculum")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Intereses_Id")
                        .HasColumnType("int");

                    b.Property<int>("Usuario_Id")
                        .HasColumnType("int");

                    b.HasKey("Revisor_Id");

                    b.HasIndex("Intereses_Id");

                    b.HasIndex("Usuario_Id");

                    b.ToTable("Revisores");
                });

            modelBuilder.Entity("Core.Domain.Entities.Rol", b =>
                {
                    b.Property<int>("Rol_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Rol_Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Core.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Usuario_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Afiliacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Rol_Id")
                        .HasColumnType("int");

                    b.HasKey("Usuario_Id");

                    b.HasIndex("Correo")
                        .IsUnique();

                    b.HasIndex("Rol_Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Core.Domain.Entities.Valoracion", b =>
                {
                    b.Property<int>("Valoracion_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Valoracion_Id");

                    b.ToTable("Valoraciones");
                });

            modelBuilder.Entity("Core.Domain.Entities.Aprobacion", b =>
                {
                    b.HasOne("Core.Domain.Entities.Articulo", "Articulos")
                        .WithMany("Aprobacions")
                        .HasForeignKey("Articulo_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("articulo-kf_aprobacion");

                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("Core.Domain.Entities.Articulo", b =>
                {
                    b.HasOne("Core.Domain.Entities.Estatus", "status")
                        .WithMany("Articulos")
                        .HasForeignKey("Estatus_Id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("estatus-kf_articulo");

                    b.HasOne("Core.Domain.Entities.Intereses", "Interes")
                        .WithMany("Articulos")
                        .HasForeignKey("Intereses_Id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("interes-kf_articulo");

                    b.HasOne("Core.Domain.Entities.Usuario", "Usuarios")
                        .WithMany("Articulos")
                        .HasForeignKey("Usuario_Id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("usuario-kf_articulo");

                    b.Navigation("Interes");

                    b.Navigation("Usuarios");

                    b.Navigation("status");
                });

            modelBuilder.Entity("Core.Domain.Entities.ArticuloAprobado", b =>
                {
                    b.HasOne("Core.Domain.Entities.Articulo", "Articulos")
                        .WithMany("ArticuloAprobados")
                        .HasForeignKey("Articulo_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("articulo-kf_articuloA");

                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("Core.Domain.Entities.AsignacionRevision", b =>
                {
                    b.HasOne("Core.Domain.Entities.Articulo", "Articulos")
                        .WithMany("AsignacionRevisions")
                        .HasForeignKey("Articulo_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("articulo-kf_asignacionR");

                    b.HasOne("Core.Domain.Entities.Revisor", "Revisors")
                        .WithMany("AsignacionRevisions")
                        .HasForeignKey("Revisor_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("revisor-kf_asignacionR");

                    b.Navigation("Articulos");

                    b.Navigation("Revisors");
                });

            modelBuilder.Entity("Core.Domain.Entities.Revision", b =>
                {
                    b.HasOne("Core.Domain.Entities.AsignacionRevision", "AsignacionRevisiones")
                        .WithMany("Revisiones")
                        .HasForeignKey("AsignacionRevision_Id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("asignacion-kf_Revision");

                    b.HasOne("Core.Domain.Entities.CriterioEvaluacion", "Criterios")
                        .WithMany("Revisiones")
                        .HasForeignKey("CriteriosEvaluacion_Id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("criterios-kf_Revision");

                    b.HasOne("Core.Domain.Entities.Valoracion", "Valoraciones")
                        .WithMany("Revisiones")
                        .HasForeignKey("Valoracion_Id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("valoracion-kf_Revision");

                    b.Navigation("AsignacionRevisiones");

                    b.Navigation("Criterios");

                    b.Navigation("Valoraciones");
                });

            modelBuilder.Entity("Core.Domain.Entities.Revisor", b =>
                {
                    b.HasOne("Core.Domain.Entities.Intereses", "Intereses")
                        .WithMany("Revisors")
                        .HasForeignKey("Intereses_Id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("interes-kf_Revisor");

                    b.HasOne("Core.Domain.Entities.Usuario", "Usuarios")
                        .WithMany("Revisors")
                        .HasForeignKey("Usuario_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("usuario-kf_Revisor");

                    b.Navigation("Intereses");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Core.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("Core.Domain.Entities.Rol", "Roles")
                        .WithMany("Usuarios")
                        .HasForeignKey("Rol_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("rol-kf_Usuario");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Core.Domain.Entities.Articulo", b =>
                {
                    b.Navigation("Aprobacions");

                    b.Navigation("ArticuloAprobados");

                    b.Navigation("AsignacionRevisions");
                });

            modelBuilder.Entity("Core.Domain.Entities.AsignacionRevision", b =>
                {
                    b.Navigation("Revisiones");
                });

            modelBuilder.Entity("Core.Domain.Entities.CriterioEvaluacion", b =>
                {
                    b.Navigation("Revisiones");
                });

            modelBuilder.Entity("Core.Domain.Entities.Estatus", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("Core.Domain.Entities.Intereses", b =>
                {
                    b.Navigation("Articulos");

                    b.Navigation("Revisors");
                });

            modelBuilder.Entity("Core.Domain.Entities.Revisor", b =>
                {
                    b.Navigation("AsignacionRevisions");
                });

            modelBuilder.Entity("Core.Domain.Entities.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Core.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Articulos");

                    b.Navigation("Revisors");
                });

            modelBuilder.Entity("Core.Domain.Entities.Valoracion", b =>
                {
                    b.Navigation("Revisiones");
                });
#pragma warning restore 612, 618
        }
    }
}
